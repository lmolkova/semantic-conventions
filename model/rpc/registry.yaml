groups:
  - id: registry.rpc
    type: attribute_group
    display_name: Remote Procedure Call (RPC) Attributes
    brief: 'This document defines attributes for remote procedure calls.'
    attributes:
      - id: rpc.method
        type: string
        stability: experimental
        brief: 'The name of the (logical) method being called, must be equal to the $method part in the span name.'
        note: >
          This is the logical name of the method from the RPC interface perspective,
          which can be different from the name of any implementing method/function.
          The `code.function` attribute may be used to store the latter
          (e.g., method actually executing the call on the server side,
          RPC client stub method on the client side).
        examples: "exampleMethod"
      - id: rpc.service
        type: string
        stability: experimental
        brief: 'The full (logical) name of the service being called, including its package name, if applicable.'
        note: >
          This is the logical name of the service from the RPC interface perspective,
          which can be different from the name of any implementing class.
          The `code.namespace` attribute may be used to store the latter
          (despite the attribute name, it may include a class name;
          e.g., class with method actually executing the call on the server side,
          RPC client stub class on the client side).
        examples: "myservice.EchoService"
      - id: rpc.system
        brief: 'A string identifying the remoting system. See below for a list of well-known identifiers.'
        type:
          members:
            - id: grpc
              value: 'grpc'
              brief: 'gRPC'
              stability: experimental
            - id: java_rmi
              value: 'java_rmi'
              brief: 'Java RMI'
              stability: experimental
            - id: dotnet_wcf
              value: 'dotnet_wcf'
              brief: '.NET WCF'
              stability: experimental
            - id: apache_dubbo
              value: 'apache_dubbo'
              brief: 'Apache Dubbo'
              stability: experimental
            - id: connect_rpc
              value: 'connect_rpc'
              brief: 'Connect RPC'
              stability: experimental
        stability: experimental
      - id: rpc.message.type
        type:
          members:
            - id: sent
              value: "SENT"
              stability: experimental
            - id: received
              value: "RECEIVED"
              stability: experimental
        stability: experimental
        brief: "Whether this is a received or sent message."
      - id: rpc.message.id
        type: int
        stability: experimental
        brief: "MUST be calculated as two different counters starting from `1` one for sent messages and one for received message."
        note: "This way we guarantee that the values will be consistent between different implementations."
      - id: rpc.message.compressed_size
        type: int
        stability: experimental
        brief: "Compressed size of the message in bytes."
      - id: rpc.message.uncompressed_size
        type: int
        stability: experimental
        brief: "Uncompressed size of the message in bytes."
