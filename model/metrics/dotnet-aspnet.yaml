groups:
  - id: aspnet
    prefix: aspnet
    type: attribute_group
    brief: ASP.NET Core attributes
    attributes:
      - id: rate_limiting.policy
        type: string
        brief: TODO
        examples: ["TODO"]
      - id: rate_limiting.result
        type:
          allow_custom_values: true
          members:
            - id: acquired
              value: 'acquired'
              brief: 'lease acquired'
            - id: rejected_reason1
              value: 'rejected_reason1'
              brief: 'TODO'
            #...
        brief: Rate-limiting result, shows whether lease was acquired or contains rejection reason
        examples: ["acquired", "rejected_reason1"]
      - id: routing.fallback
        type: string
        brief: TODO
        examples: ["TODO"]
      - id: handler
        type: string
        brief: TODO
        examples: ["TODO"]
      - id: match_status
        type:
          allow_custom_values: true
          members:
            - id: success
              value: 'success'
              brief: 'No error'
            - id: failure
              value: 'failure'
              brief: 'failure'
        brief: Match result - success or failure
        examples: ["success", "failure"]

  # misc
  - id: metric.aspnet.server.unhandled_requests
    type: metric
    metric_name: aspnet.unhandled_requests
    brief: Number of requests that reached the end of the middleware pipeline without being handled by application code.
    instrument: updowncounter
    unit: "{request}"
    note: |
      Meter name is `Microsoft.AspNetCore.Hosting`.**

  # routing
  - id: metric.aspnet.routing.matches
    type: metric
    metric_name: aspnet.routing.successful_matches
    brief: Number of requests that successfully matched to an endpoint.
    instrument: counter
    unit: "{match}"
    note: >
      An unmatched request may be handled by later middleware, such as the static files or authentication middleware.
      Meter name is `Microsoft.AspNetCore.Routing`.
    attributes:
      - ref: http.route
        requirement_level: required
      - ref: aspnet.routing.fallback
        requirement_level: required
      - ref: aspnet.match_status
        requirement_level: required

  # diagnostics
  - id: metric.aspnet.diagnostics_handler.exceptions
    type: metric
    metric_name: aspnet.diagnostics_handler.exceptions
    brief: Number of exceptions caught by exception handling middleware.
    instrument: counter
    unit: "{exception}"
    note: Meter name is `Microsoft.AspNetCore.Diagnostics`
    attributes:
      - ref: exception.type
      - ref: aspnet.handler
        requirement_level: required
      - ref: dotnet.error.code

  # rate_limiting
  - id: metric.aspnet.rate_limiting.active_request_leases
    type: metric
    metric_name: aspnet.rate_limiting.active_request_leases
    brief: Number of requests that are currently active on the server that hold a rate limiting lease.
    instrument: updowncounter
    unit: "{request}"
    note: Meter name is `Microsoft.AspNetCore.RateLimiting`
    attributes:
      - ref: aspnet.rate_limiting.policy
        requirement_level: required

  - id: metric.aspnet.rate_limiting.request_lease.duration
    type: metric
    metric_name: aspnet.rate_limiting.request_lease.duration
    brief: The duration of rate limiting lease held by requests on the server.
    instrument: histogram
    unit: "s"
    note: |
      Meter name is `Microsoft.AspNetCore.RateLimiting`
      **TODO do we need attributes?, can we explain what it means better**`

  - id: metric.aspnet.rate_limiting.queued_request.duration
    type: metric
    metric_name: aspnet.rate_limiting.queued_request.duration
    brief: The duration of request in a queue, waiting to acquire a rate limiting lease.
    instrument: histogram
    unit: "s"
    note: |
      Meter name is `Microsoft.AspNetCore.RateLimiting`

      **TODO: I don't really understand what this duration is, can we improve name, brief or description to explain? **
    attributes:
      - ref: aspnet.rate_limiting.policy
        requirement_level: required

  - id: metric.aspnet.rate_limiting.queued_requests
    type: metric
    metric_name: aspnet.rate_limiting.queued_requests
    brief: Number of requests that are currently queued, waiting to acquire a rate limiting lease.
    instrument: updowncounter
    unit: "{request}"
    note: |
      Meter name is `Microsoft.AspNetCore.RateLimiting`
    attributes:
      - ref: aspnet.rate_limiting.policy
        requirement_level: required

  - id: metric.aspnet.rate_limiting.requests
    type: metric
    metric_name: aspnet.rate_limiting.requests
    brief: Number of requests that tried to acquire a rate limiting lease.
    instrument: counter
    unit: "{request}"
    note: |
      Requests could be rejected by global or endpoint rate limiting policies. Or the request could be cancelled while waiting for the lease.

      Meter name is `Microsoft.AspNetCore.RateLimiting`
    attributes:
      - ref: aspnet.rate_limiting.policy
        requirement_level: required
      - ref: aspnet.rate_limiting.result
